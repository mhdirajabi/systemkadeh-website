version: "3.8"

services:
  db:
    image: postgres:16.3-alpine
    container_name: systemkadeh_postgres_dev
    restart: unless-stopped
    env_file:
      - ../.env.dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ecommerce -U ecommerce_user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - systemkadeh_dev_net

  redis:
    image: redis:7.4.0-alpine
    ports:
      - "6379:6379"
    container_name: systemkadeh_redis_dev
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-n", "1", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - systemkadeh_dev_net
    volumes:
      - redis_data_dev:/data
      - ./docker/redis/dev_redis.conf:/usr/local/etc/redis/redis.conf

  backend:
    build:
      context: ../backend
    container_name: systemkadeh_backend_dev
    volumes:
      - ../backend:/app
      - ./logs/backend:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - ../.env.dev
    environment:
      - DEV_MODE=True
      - REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - systemkadeh_dev_net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/healthz/" ]
      interval: 30s
      timeout: 5s
      retries: 3

  celery:
    build:
      context: ../backend
    container_name: systemkadeh_celery_dev
    command: celery -A ecommerce worker --loglevel=info --concurrency=2
    volumes:
      - ../backend:/app
    env_file:
      - ../.env.dev
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - systemkadeh_dev_net

  celery_beat:
    build:
      context: ../backend
    container_name: systemkadeh_celery_beat_dev
    command: celery -A ecommerce beat --loglevel=info
    volumes:
      - ../backend:/app
    env_file:
      - ../.env.dev
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - systemkadeh_dev_net

  frontend:
    build:
      context: ../frontend
    container_name: systemkadeh_frontend_dev
    ports:
      - "3000:3000" # Next.js default port
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next # Enable HMR for Next.js
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    networks:
      - systemkadeh_dev_net

networks:
  systemkadeh_dev_net:
    driver: bridge
    name: systemkadeh_dev_net

volumes:
  postgres_data_dev:
  redis_data_dev:
